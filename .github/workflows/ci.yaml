name: CI

on:
  push:
    branches: [ main, feat/**, feature/** ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      run_smokes:
        description: "Run smoke tests (requires API env secrets)"
        required: false
        default: "false"

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  spec:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci

      - name: Bundle OpenAPI
        run: |
          if [ -f spec/MBapp-Modules.yaml ]; then
            npm run spec:bundle
          else
            echo "No spec/MBapp-Modules.yaml â€” skipping bundle"
          fi

      - name: Lint spec (non-blocking)
        run: |
          if [ -f spec/MBapp-Modules.yaml ]; then
            npm run spec:lint || true
          fi

      - name: Generate types (API & Mobile)
        run: |
          if [ -f spec/openapi.yaml ]; then
            npm run spec:types:api
            npm run spec:types:mobile
          fi

  api:
    runs-on: ubuntu-latest
    needs: [ spec ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - name: Build API
        run: |
          npm run api:build || npx tsc -p apps/api/tsconfig.json --pretty false

  mobile:
    runs-on: ubuntu-latest
    needs: [ spec ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - name: Typecheck Mobile
        run: |
          # Prefer workspace script if you add it later; otherwise fallback to direct tsc
          npm run -w apps/mobile typecheck --if-present || npx tsc -p apps/mobile/tsconfig.json --noEmit --pretty false || echo "mobile typecheck skipped"

  smokes:
    # Run smokes on push, or when manually dispatched with run_smokes=true
    if: ${{ github.event_name == 'push' || github.event.inputs.run_smokes == 'true' }}
    runs-on: ubuntu-latest
    needs: [ api ]
    strategy:
      fail-fast: false
      matrix:
        test:
          # Existing scripts in your package.json
          - "smoke:sales:happy"
          - "smoke:sales:guards"
          - "smoke:purchasing:happy"
          - "smoke:purchasing:guards"
          - "smoke:product:flags"
          - "smoke:backorders:worklist"
          - "smoke:backorders:ignore-convert"
          - "smoke:po:suggest-draft"
          - "smoke:epc:resolve"
          # Sprint F additions
          - "smoke:po:suggest-multivendor"
          - "smoke:backorders:bulk"
    env:
      MBAPP_API_BASE: ${{ secrets.MBAPP_API_BASE }}
      MBAPP_TENANT_ID: ${{ secrets.MBAPP_TENANT_ID }}
      # Use whichever you support for auth; keep both available
      MBAPP_API_KEY: ${{ secrets.MBAPP_API_KEY }}
      SMOKE_DEV_LOGIN_EMAIL: ${{ secrets.SMOKE_DEV_LOGIN_EMAIL }}
      SMOKE_DEV_LOGIN_SECRET: ${{ secrets.SMOKE_DEV_LOGIN_SECRET }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
      - run: npm ci
      - name: List available tests (informational)
        run: npm run smoke:list || true
      - name: Run ${{ matrix.test }}
        run: npm run ${{ matrix.test }}
