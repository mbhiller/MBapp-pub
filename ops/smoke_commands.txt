


########### EXAMPLE ###############
# Show env
node ops/smoke.mjs env

# Login (sets MBAPP_BEARER for this process)
node ops/smoke.mjs login --tenant DemoTenant --email dev@example.com --policy full

# Create 3 per module
node ops/smoke.mjs smoke:all:create --each 3

# List / Update / Delete
node ops/smoke.mjs smoke:all:list
node ops/smoke.mjs smoke:all:update
node ops/smoke.mjs smoke:all:delete

# Per module
node ops/smoke.mjs smoke:event:create --eacporth 3
node ops/smoke.mjs smoke:purchaseOrder:list

# Flows
node ops/smoke.mjs smoke:purchaseOrder:flow --lines 3 --qty 2
node ops/smoke.mjs smoke:salesOrder:flow    --lines 3 --qty 1

# 0) Login
node ops/smoke.mjs login --tenant DemoTenant --email dev@example.com

# 1) Normal flows (should PASS without negatives)
node ops/smoke.mjs smoke:purchaseOrder:flow --lines 2 --qty 2
node ops/smoke.mjs smoke:salesOrder:flow    --lines 2 --qty 1

# 2) Guardrails (these EXPECT 409 and then PASS the test)
node ops/smoke.mjs smoke:guardrails:so-overcommit --qty 2
node ops/smoke.mjs smoke:guardrails:so-overfulfill --qty 2

# 3) PO idempotency (no double increment when same Idempotency-Key)
node ops/smoke.mjs smoke:guardrails:po-idempotency --lines 2 --qty 2 --idem test-key-123

# 4) Reserved release on cancel
node ops/smoke.mjs smoke:guardrails:cancel-release

node ops/smoke.mjs smoke:scanner:simulate

# Show env
node ops/smoke.mjs env

# Login with full lowercase policy, print policy, and write token files
node ops/smoke.mjs login --tenant DemoTenant --email dev@example.com --policy full

# (optional) set token in current shell using the file we wrote
$env:MBAPP_BEARER = (Get-Content ops/.mb_bearer)

# Or capture directly:
$env:MBAPP_BEARER = $(node ops/smoke.mjs login --tenant DemoTenant --email dev@example.com --policy full --export)

# Create 3 per module
node ops/smoke.mjs smoke:all:create --each 3

# Flows
node ops/smoke.mjs smoke:purchaseOrder:flow --lines 3 --qty 2
node ops/smoke.mjs smoke:salesOrder:flow    --lines 3 --qty 1


gc tools
List keys for one type
node ops/tools/gc/gc.mjs list:type product

Delete everything of a type (tenant-scoped)
node ops/tools/gc/gc.mjs delete:type purchaseorder

List all keys for the tenant
node ops/tools/gc/gc.mjs list:all

Delete arbitrary keys from a file
# save an array like: [{ "pk": "DemoTenant", "sk": "product#abc" }, ...]
node ops/tools/gc/gc.mjs delete:keys .\ops\tools\gc\keys.json

054799133473

npm run api:deploy   -FunctionName "mbapp-nonprod-objects" `
>>   -Region "us-east-1" `
>>   -ApiBase "$Env:MBAPP_API_BASE"