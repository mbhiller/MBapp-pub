openapi: 3.0.3
info:
  title: MBapp API
  version: 2025-09-23
  description: >
    Master spec (single source of truth). Bundle to root openapi.yaml for
    tooling and codegen.
servers:
  - url: https://api.example.com
tags:
  - name: Objects
  - name: Auth
  - name: Views
  - name: Workspaces
  - name: Integrations
paths:
  /objects/{type}:
    get:
      tags:
        - Objects
      summary: List objects (alias; same as /objects/{type}/list)
      parameters:
        - $ref: "#/components/parameters/TenantHeader"
        - $ref: "#/components/parameters/TypePath"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Next"
        - $ref: "#/components/parameters/By"
        - $ref: "#/components/parameters/Sort"
        - $ref: "#/components/parameters/Fields"
        - $ref: "#/components/parameters/Q"
        - $ref: "#/components/parameters/EventId"
      responses:
        "200":
          $ref: "#/components/responses/ListPage"
    post:
      tags:
        - Objects
      summary: Create object
      parameters:
        - $ref: "#/components/parameters/TenantHeader"
        - $ref: "#/components/parameters/TypePath"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnyObject"
      responses:
        "200":
          description: Created
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnyObject"
  /objects/{type}/list:
    get:
      tags:
        - Objects
      summary: List objects
      parameters:
        - $ref: "#/components/parameters/TenantHeader"
        - $ref: "#/components/parameters/TypePath"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Next"
        - $ref: "#/components/parameters/By"
        - $ref: "#/components/parameters/Sort"
        - $ref: "#/components/parameters/Fields"
        - $ref: "#/components/parameters/Q"
        - $ref: "#/components/parameters/EventId"
      responses:
        "200":
          $ref: "#/components/responses/ListPage"
  /objects/{type}/search:
    get:
      tags:
        - Objects
      summary: Search objects (lightweight query + in-page filter)
      parameters:
        - $ref: "#/components/parameters/TenantHeader"
        - $ref: "#/components/parameters/TypePath"
        - $ref: "#/components/parameters/Q"
        - $ref: "#/components/parameters/Limit"
        - $ref: "#/components/parameters/Next"
        - $ref: "#/components/parameters/Fields"
      responses:
        "200":
          $ref: "#/components/responses/ListPage"
  /objects/{type}/{id}:
    get:
      tags:
        - Objects
      summary: Get object by id
      parameters:
        - $ref: "#/components/parameters/TenantHeader"
        - $ref: "#/components/parameters/TypePath"
        - $ref: "#/components/parameters/IdPath"
        - $ref: "#/components/parameters/Fields"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnyObject"
    put:
      tags:
        - Objects
      summary: Update object
      parameters:
        - $ref: "#/components/parameters/TenantHeader"
        - $ref: "#/components/parameters/TypePath"
        - $ref: "#/components/parameters/IdPath"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AnyObject"
      responses:
        "200":
          description: Updated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AnyObject"
    delete:
      tags:
        - Objects
      summary: Delete object
      parameters:
        - $ref: "#/components/parameters/TenantHeader"
        - $ref: "#/components/parameters/TypePath"
        - $ref: "#/components/parameters/IdPath"
      responses:
        "200":
          description: Deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                  type:
                    type: string
                  deleted:
                    type: boolean
  /auth/policy:
    get:
      tags:
        - Auth
      summary: Get RBAC policy for current user & tenant
      parameters:
        - $ref: "#/components/parameters/TenantHeader"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Policy"
components:
  parameters:
    TenantHeader:
      name: x-tenant-id
      in: header
      required: true
      schema:
        type: string
    TypePath:
      name: type
      in: path
      required: true
      schema:
        type: string
        description: Module/object type key (e.g., product, inventory, event)
    IdPath:
      name: id
      in: path
      required: true
      schema:
        type: string
    Limit:
      name: limit
      in: query
      schema:
        type: integer
        minimum: 1
        maximum: 200
        default: 20
    Next:
      name: next
      in: query
      schema:
        type: string
        description: opaque cursor
    By:
      name: by
      in: query
      schema:
        type: string
        enum:
          - createdAt
          - updatedAt
        default: createdAt
    Sort:
      name: sort
      in: query
      schema:
        type: string
        enum:
          - asc
          - desc
        default: desc
    Fields:
      name: fields
      in: query
      schema:
        type: string
        description: "comma-separated projection: id,name,sku"
    Q:
      name: q
      in: query
      schema:
        type: string
    EventId:
      name: eventId
      in: query
      schema:
        type: string
  responses:
    BadRequest:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    Error:
      type: object
      properties:
        code:
          type: string
          example: VALIDATION_ERROR
        message:
          type: string
          example: Invalid 'eventId' parameter
        details:
          type: object
          additionalProperties: true
    Base:
      type: object
      required:
        - id
        - type
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          description: UUID
        type:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        externalId:
          type: string
    ListPage:
      type: object
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/AnyObject"
        next:
          type: string
          nullable: true
        limit:
          type: integer
          default: 20
    Client:
      allOf:
        - $ref: "#/components/schemas/Base"
        - type: object
          properties:
            type:
              type: string
              enum:
                - client
            name:
              type: string
            displayName:
              type: string
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string
              format: email
            phone:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - archived
              default: active
            notes:
              type: string
          required:
            - type
            - id
            - createdAt
            - updatedAt
            - name
    Account:
      allOf:
        - $ref: "#/components/schemas/Base"
        - type: object
          properties:
            type:
              type: string
              enum:
                - account
            name:
              type: string
            number:
              type: string
            currency:
              type: string
            accountType:
              type: string
              description: e.g., asset, liability, revenue
            balance:
              type: number
              description: Current balance (display only)
            status:
              type: string
              enum:
                - active
                - inactive
                - archived
              default: active
          required:
            - type
            - id
            - createdAt
            - updatedAt
            - name
    Product:
      allOf:
        - $ref: "#/components/schemas/Base"
        - type: object
          required:
            - type
            - name
          properties:
            type:
              type: string
              enum:
                - product
            name:
              type: string
            kind:
              type: string
              enum:
                - good
                - service
            sku:
              type: string
            price:
              type: number
            taxCode:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - archived
              default: active
            notes:
              type: string
    InventoryItem:
      allOf:
        - $ref: "#/components/schemas/Base"
        - type: object
          properties:
            type:
              type: string
              enum:
                - inventory
            productId:
              type: string
              description: Optional link to a product
            name:
              type: string
            sku:
              type: string
            quantity:
              type: number
            uom:
              type: string
              description: Unit of measure
            location:
              type: string
            minQty:
              type: number
            maxQty:
              type: number
            status:
              type: string
              enum:
                - active
                - inactive
                - archived
              default: active
            notes:
              type: string
    Resource:
      allOf:
        - $ref: "#/components/schemas/Base"
        - type: object
          required:
            - type
            - name
          properties:
            type:
              type: string
              enum:
                - resource
            name:
              type: string
            code:
              type: string
            url:
              type: string
              format: uri
            expiresAt:
              type: string
              format: date-time
    Event:
      allOf:
        - $ref: "#/components/schemas/Base"
        - type: object
          properties:
            type:
              type: string
              enum:
                - event
            name:
              type: string
            description:
              type: string
            location:
              type: string
            startsAt:
              type: string
              format: date-time
            endsAt:
              type: string
              format: date-time
            status:
              type: string
              enum:
                - available
                - unavailable
                - maintenance
              default: available
            capacity:
              type: number
            notes:
              type: string
          required:
            - type
            - id
            - createdAt
            - updatedAt
            - name
            - startsAt
    Registration:
      allOf:
        - $ref: "#/components/schemas/Base"
        - type: object
          required:
            - eventId
          properties:
            type:
              type: string
              enum:
                - registration
            eventId:
              type: string
            clientId:
              type: string
            startsAt:
              type: string
              format: date-time
            endsAt:
              type: string
              format: date-time
            status:
              type: string
              enum:
                - pending
                - confirmed
                - cancelled
                - checked_in
                - completed
              default: pending
            registeredAt:
              type: string
              format: date-time
            notes:
              type: string
    Reservation:
      allOf:
        - $ref: "#/components/schemas/Base"
        - type: object
          required:
            - resourceId
          properties:
            type:
              type: string
              enum:
                - reservation
            resourceId:
              type: string
            start:
              type: string
              format: date-time
              description: Alias of startsAt
            end:
              type: string
              format: date-time
              description: Alias of endsAt
            startsAt:
              type: string
              format: date-time
            endsAt:
              type: string
              format: date-time
            clientId:
              type: string
            status:
              type: string
              enum:
                - pending
                - confirmed
                - cancelled
                - checked_in
                - completed
              default: pending
            notes:
              type: string
    Vendor:
      allOf:
        - $ref: "#/components/schemas/Base"
        - type: object
          required:
            - name
          properties:
            type:
              type: string
              enum:
                - vendor
            name:
              type: string
            displayName:
              type: string
            email:
              type: string
              format: email
            phone:
              type: string
            notes:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - archived
              default: active
    Employee:
      allOf:
        - $ref: "#/components/schemas/Base"
        - type: object
          properties:
            type:
              type: string
              enum:
                - employee
            displayName:
              type: string
            email:
              type: string
              format: email
            phone:
              type: string
            role:
              type: string
            status:
              type: string
              enum:
                - active
                - inactive
                - terminated
              default: active
            hiredAt:
              type: string
              format: date-time
            startDate:
              type: string
              format: date-time
              description: Alias of hiredAt for UI consistency
            terminatedAt:
              type: string
              format: date-time
            notes:
              type: string
          required:
            - type
            - id
            - createdAt
            - updatedAt
            - displayName
    AnyObject:
      oneOf:
        - $ref: "#/components/schemas/Client"
        - $ref: "#/components/schemas/Account"
        - $ref: "#/components/schemas/Product"
        - $ref: "#/components/schemas/InventoryItem"
        - $ref: "#/components/schemas/Resource"
        - $ref: "#/components/schemas/Event"
        - $ref: "#/components/schemas/Registration"
        - $ref: "#/components/schemas/Reservation"
        - $ref: "#/components/schemas/Vendor"
        - $ref: "#/components/schemas/Employee"
